// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Remira.UCP.SupplierPortal.Infrastructure.Persistence;

#nullable disable

namespace Remira.UCP.SupplierPortal.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250615220742_InitialCreateWithTemplates")]
    partial class InitialCreateWithTemplates
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Remira.UCP.SupplierPortal.Domain.Entities.AgentAssignment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AgentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("AgentId", "UserId")
                        .IsUnique();

                    b.ToTable("AgentAssignments");
                });

            modelBuilder.Entity("Remira.UCP.SupplierPortal.Domain.Entities.QuestionCondition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ConditionType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("QuestionnaireTemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TargetQuestionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TriggerQuestionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TriggerValue")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.HasIndex("ConditionType");

                    b.HasIndex("QuestionnaireTemplateId");

                    b.HasIndex("TargetQuestionId");

                    b.HasIndex("TriggerQuestionId");

                    b.ToTable("QuestionConditions");
                });

            modelBuilder.Entity("Remira.UCP.SupplierPortal.Domain.Entities.Questionnaire", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AssignedAgentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AssignedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("SupplierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AssignedAgentId");

                    b.HasIndex("AssignedUserId");

                    b.HasIndex("DueDate");

                    b.HasIndex("Status");

                    b.HasIndex("SupplierId");

                    b.HasIndex("TemplateId");

                    b.ToTable("Questionnaires");
                });

            modelBuilder.Entity("Remira.UCP.SupplierPortal.Domain.Entities.QuestionnaireSection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<Guid>("QuestionnaireTemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TranslationsJson")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("QuestionnaireTemplateId", "Order");

                    b.ToTable("QuestionnaireSections");
                });

            modelBuilder.Entity("Remira.UCP.SupplierPortal.Domain.Entities.QuestionnaireTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CertificateType")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("ExpirationMonths")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryLanguage")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TargetEntityTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Created");

                    b.HasIndex("Status");

                    b.HasIndex("Title", "Status");

                    b.ToTable("QuestionnaireTemplates");
                });

            modelBuilder.Entity("Remira.UCP.SupplierPortal.Domain.Entities.Remediation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<Guid>("QuestionnaireId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ResponsibleAgentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ResponsibleUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DueDate");

                    b.HasIndex("QuestionnaireId");

                    b.HasIndex("ResponsibleAgentId");

                    b.HasIndex("ResponsibleUserId");

                    b.HasIndex("Status");

                    b.ToTable("Remediations");
                });

            modelBuilder.Entity("Remira.UCP.SupplierPortal.Domain.Entities.SupplyNetworkEntities", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AccreditationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AccreditationStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("City")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ContactPersonName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Country")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeactivationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("EntityType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ExternalCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LegalName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Region")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RoleInSupplyChain")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShortName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Tags")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("TaxCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VatCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("AccreditationStatus");

                    b.HasIndex("EntityType");

                    b.HasIndex("ExternalCode");

                    b.HasIndex("LegalName")
                        .HasDatabaseName("IX_Suppliers_Name");

                    b.HasIndex("ParentId");

                    b.HasIndex("VatCode");

                    b.ToTable("SupplyNetworkEntities");
                });

            modelBuilder.Entity("Remira.UCP.SupplierPortal.Domain.Entities.TemplateQuestion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AllowDocumentUpload")
                        .HasColumnType("bit");

                    b.Property<string>("ConfigurationJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HelpText")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxDocuments")
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<Guid>("QuestionnaireTemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("RequireDocuments")
                        .HasColumnType("bit");

                    b.Property<Guid?>("SectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("TranslationsJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Type");

                    b.HasIndex("QuestionnaireTemplateId", "Order");

                    b.HasIndex("SectionId", "Order");

                    b.ToTable("TemplateQuestions");
                });

            modelBuilder.Entity("Remira.UCP.SupplierPortal.Domain.Entities.Test", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Test");
                });

            modelBuilder.Entity("Remira.UCP.SupplierPortal.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("ExternalId")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Remira.UCP.SupplierPortal.Domain.Entities.UserSupplier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SupplierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.HasIndex("UserId", "SupplierId")
                        .IsUnique();

                    b.ToTable("UserSuppliers");
                });

            modelBuilder.Entity("Remira.UCP.SupplierPortal.Domain.Entities.AgentAssignment", b =>
                {
                    b.HasOne("Remira.UCP.SupplierPortal.Domain.Entities.User", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Remira.UCP.SupplierPortal.Domain.Entities.User", "User")
                        .WithMany("AgentAssignments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Agent");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Remira.UCP.SupplierPortal.Domain.Entities.QuestionCondition", b =>
                {
                    b.HasOne("Remira.UCP.SupplierPortal.Domain.Entities.QuestionnaireTemplate", null)
                        .WithMany("Conditions")
                        .HasForeignKey("QuestionnaireTemplateId");

                    b.HasOne("Remira.UCP.SupplierPortal.Domain.Entities.TemplateQuestion", "TargetQuestion")
                        .WithMany("TargetConditions")
                        .HasForeignKey("TargetQuestionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Remira.UCP.SupplierPortal.Domain.Entities.TemplateQuestion", "TriggerQuestion")
                        .WithMany("TriggeredConditions")
                        .HasForeignKey("TriggerQuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TargetQuestion");

                    b.Navigation("TriggerQuestion");
                });

            modelBuilder.Entity("Remira.UCP.SupplierPortal.Domain.Entities.Questionnaire", b =>
                {
                    b.HasOne("Remira.UCP.SupplierPortal.Domain.Entities.User", "AssignedAgent")
                        .WithMany()
                        .HasForeignKey("AssignedAgentId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Remira.UCP.SupplierPortal.Domain.Entities.User", "AssignedUser")
                        .WithMany()
                        .HasForeignKey("AssignedUserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Remira.UCP.SupplierPortal.Domain.Entities.SupplyNetworkEntities", "Supplier")
                        .WithMany("Questionnaires")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Remira.UCP.SupplierPortal.Domain.Entities.QuestionnaireTemplate", "Template")
                        .WithMany("QuestionnaireInstances")
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("AssignedAgent");

                    b.Navigation("AssignedUser");

                    b.Navigation("Supplier");

                    b.Navigation("Template");
                });

            modelBuilder.Entity("Remira.UCP.SupplierPortal.Domain.Entities.QuestionnaireSection", b =>
                {
                    b.HasOne("Remira.UCP.SupplierPortal.Domain.Entities.QuestionnaireTemplate", "QuestionnaireTemplate")
                        .WithMany("Sections")
                        .HasForeignKey("QuestionnaireTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QuestionnaireTemplate");
                });

            modelBuilder.Entity("Remira.UCP.SupplierPortal.Domain.Entities.Remediation", b =>
                {
                    b.HasOne("Remira.UCP.SupplierPortal.Domain.Entities.Questionnaire", "Questionnaire")
                        .WithMany("Remediations")
                        .HasForeignKey("QuestionnaireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Remira.UCP.SupplierPortal.Domain.Entities.User", "ResponsibleAgent")
                        .WithMany()
                        .HasForeignKey("ResponsibleAgentId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Remira.UCP.SupplierPortal.Domain.Entities.User", "ResponsibleUser")
                        .WithMany()
                        .HasForeignKey("ResponsibleUserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Questionnaire");

                    b.Navigation("ResponsibleAgent");

                    b.Navigation("ResponsibleUser");
                });

            modelBuilder.Entity("Remira.UCP.SupplierPortal.Domain.Entities.SupplyNetworkEntities", b =>
                {
                    b.HasOne("Remira.UCP.SupplierPortal.Domain.Entities.SupplyNetworkEntities", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Remira.UCP.SupplierPortal.Domain.Entities.TemplateQuestion", b =>
                {
                    b.HasOne("Remira.UCP.SupplierPortal.Domain.Entities.QuestionnaireTemplate", "QuestionnaireTemplate")
                        .WithMany("Questions")
                        .HasForeignKey("QuestionnaireTemplateId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Remira.UCP.SupplierPortal.Domain.Entities.QuestionnaireSection", "Section")
                        .WithMany("Questions")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("QuestionnaireTemplate");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("Remira.UCP.SupplierPortal.Domain.Entities.UserSupplier", b =>
                {
                    b.HasOne("Remira.UCP.SupplierPortal.Domain.Entities.SupplyNetworkEntities", "Supplier")
                        .WithMany("UserSuppliers")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Remira.UCP.SupplierPortal.Domain.Entities.User", "User")
                        .WithMany("UserSuppliers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Supplier");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Remira.UCP.SupplierPortal.Domain.Entities.Questionnaire", b =>
                {
                    b.Navigation("Remediations");
                });

            modelBuilder.Entity("Remira.UCP.SupplierPortal.Domain.Entities.QuestionnaireSection", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("Remira.UCP.SupplierPortal.Domain.Entities.QuestionnaireTemplate", b =>
                {
                    b.Navigation("Conditions");

                    b.Navigation("QuestionnaireInstances");

                    b.Navigation("Questions");

                    b.Navigation("Sections");
                });

            modelBuilder.Entity("Remira.UCP.SupplierPortal.Domain.Entities.SupplyNetworkEntities", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Questionnaires");

                    b.Navigation("UserSuppliers");
                });

            modelBuilder.Entity("Remira.UCP.SupplierPortal.Domain.Entities.TemplateQuestion", b =>
                {
                    b.Navigation("TargetConditions");

                    b.Navigation("TriggeredConditions");
                });

            modelBuilder.Entity("Remira.UCP.SupplierPortal.Domain.Entities.User", b =>
                {
                    b.Navigation("AgentAssignments");

                    b.Navigation("UserSuppliers");
                });
#pragma warning restore 612, 618
        }
    }
}
